/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './pages/~__root'
import { Route as IndexImport } from './pages/~index'
import { Route as ExpensesExpenseNameImport } from './pages/~expenses/~$expenseName'
import { Route as IncomesIndexImport } from './pages/~incomes/~index'
import { Route as ExpensesIndexImport } from './pages/~expenses/~index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesExpenseNameRoute = ExpensesExpenseNameImport.update({
  path: '/expenses/$expenseName',
  getParentRoute: () => rootRoute,
} as any)

const IncomesIndexRoute = IncomesIndexImport.update({
  path: '/incomes/',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesIndexRoute = ExpensesIndexImport.update({
  path: '/expenses/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/expenses/': {
      id: '/expenses/'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof ExpensesIndexImport
      parentRoute: typeof rootRoute
    }
    '/incomes/': {
      id: '/incomes/'
      path: '/incomes'
      fullPath: '/incomes'
      preLoaderRoute: typeof IncomesIndexImport
      parentRoute: typeof rootRoute
    }
    '/expenses/$expenseName': {
      id: '/expenses/$expenseName'
      path: '/expenses/$expenseName'
      fullPath: '/expenses/$expenseName'
      preLoaderRoute: typeof ExpensesExpenseNameImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/expenses': typeof ExpensesIndexRoute
  '/incomes': typeof IncomesIndexRoute
  '/expenses/$expenseName': typeof ExpensesExpenseNameRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/expenses': typeof ExpensesIndexRoute
  '/incomes': typeof IncomesIndexRoute
  '/expenses/$expenseName': typeof ExpensesExpenseNameRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/expenses/': typeof ExpensesIndexRoute
  '/incomes/': typeof IncomesIndexRoute
  '/expenses/$expenseName': typeof ExpensesExpenseNameRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/expenses' | '/incomes' | '/expenses/$expenseName'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/expenses' | '/incomes' | '/expenses/$expenseName'
  id: '__root__' | '/' | '/expenses/' | '/incomes/' | '/expenses/$expenseName'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExpensesIndexRoute: typeof ExpensesIndexRoute
  IncomesIndexRoute: typeof IncomesIndexRoute
  ExpensesExpenseNameRoute: typeof ExpensesExpenseNameRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExpensesIndexRoute: ExpensesIndexRoute,
  IncomesIndexRoute: IncomesIndexRoute,
  ExpensesExpenseNameRoute: ExpensesExpenseNameRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/expenses/",
        "/incomes/",
        "/expenses/$expenseName"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/expenses/": {
      "filePath": "~expenses/~index.tsx"
    },
    "/incomes/": {
      "filePath": "~incomes/~index.tsx"
    },
    "/expenses/$expenseName": {
      "filePath": "~expenses/~$expenseName.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
